Start Date: 06-06-2024
Time Session-1: 10:30 am to 12:30 pm (Class Room Mentoring)
Time Session-2: 01:30 pm to 03:30 pm (Practical Session)
Total Strength: 46 + 3
Repo URL: https://github.com/milandas63/Intern-2024-06-06/

NAME                                MOBILE NO.  EMAIL-ID                            GITHUB-ID
Maiyang Ghiselaine		            7749091578	maiyangghiselaine@gmail.com         Maiyang2000
Parsuram Panda		                6372993571	pparsuram420@gmail.com		        parsurampanda
Rajib Raj Patnaik                   6370995667  patnaikrajib05@gmail.com            rajib0532
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Priyanshu Sekhar Jena               8658009062  rajashree.bls@gmail.com             Priyanshu008x
Mir Abusalam                        8984038015  mirabusalam72@gmail.com             mirabusalam
Md Sidik                            6371485412  sidikmd42@gmail.com                 sidik11
Sethi Rohan Kailesh                 9022264432  rohansethi251@gmail.com             Alphars18
Nandan Kumar                        9234366410  raznandan240@gmail.com              nandan@240
Ratikanta Mohanthy                  9556563490  ratikantamohanty924@gmail.com       Ratikanta5
Aswini Kumar Raut                   8093514104  aswiniraut.tech@gmail.com           Aswini-kumar-raut
Bibhu Prasad Baliarsingh            8018504875  baliarsinghb049@gmail.com           BibhuPrasadBaliarsingh
Somya Ranjan Barik                  8456091003  somyaranjanbarik1206@gmail.com      SomyaBarik
Laxmikanta Mohanta                  7608070691  laxmikanta.scm@gmail.com            laxmikanta023
Ajit Kumar Sahoo                    9668220935  ajitsahoo9638705@gmail.com          ajit652
Soumendra Madhusudan Priyadarshi    9692753031  smpriyadarshibarik@gmail.com        Happy67248
Roshan Narayan Naik                 9937460553  brroshan04@gmail.com                RoshanNaik765
Manas Ranjan Malla                  9861609109  manasbalu5@gmail.com                manasranjan776
Soumyajit Samal                     8260658966  somyajitsamal3@gmail.com            soumyajitsamal001
Sourav Kumar Pandab                 9040573208  souravkumarpandab1437@gmail.com     SouravKumarPandab
Jyoti Ranjan Jena                   9337442818  jyotiranjanjena535@gmail.com        jyotiranjan950
Ashutosh Dash                       9114137543  dashashutosh92@gmail.com            Ashutosh353
Anupam Nayak                        7077548458  anupamnayak358@gmail.com            Anupam829
Deba Prakash Swain                  9078644350  debaprakashswain000@gmail.com       PRAKASH-14A
Soumya Prakash Behera               9776625011  soumyaprakashbehera3114@gmail.com   SoumyaPrakashBehera
Prabina Kumar Das                   8093583966  prabindas4423@gmail.com             Prabina-Kumar-Das
Barun samarath                      6371057905  varunsamarath@gmail.com             Varunsamrath
Susil Kumar Nayak                   8984339007  nayaksushil298@gmail.com            Susil-commits
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Sumit Sourav Dash	                9937469053	ds6972943@gmail.com	                SUMIT-77985
Ritesh Kumar Rout	                8260013234	riteshroutrishi@gmail.com	        Ritesh-Kumar-Rout
Harichandan Keshi	                9348753795	harikeshi894@gmail.com	            Harichandankeshi
Raj Aditya Mondal	                9692459896	raadmo682@gmail.com	                Raj-Aditya-Mondal
Subhrajit Das	                    8984035366	subhrajitdas0.698@gmail.com	        subhrajitdas69
Priyanshu Nayak	                    9692725590	pn9261556@gmail.com	                priyanshu125125
Subham Sahoo	                    9827883738	subhamsahoo081@gmail.com	        subham0810
Arup Mohanty	                    9040544330	arupmohanty529@gmail.com	        arup5290
Ratiranjan Pati	                    7847981276	krishna18125@gmail.com	            Rati1273
Babul Parida	                    6372745808	babulparida625@gmail.com	        Babul480
Maheswar Malik	                    8984081985	malikmaheswar152@gmail.com	        mahesh6845
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Chinmaya Mohanta                    7735265751  chinmayachinuyoyo@gmail.com         Chinmaya5751
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Subham Kumar Kabi                   6291591601  subhamkumakabi@gmail.com            Subham6370
Anish Nayak                         7077935159  nayakanish737@gmail.com             Anish7585
Soumyaranjan Barik                  8260873876  soumyaranjanbarik5961@gmail.com     Soumya5961
Rajendra Kumar Panda                9348080253  sublimeboyraju@gmail.com            sublimeboyraju
Rajesh Pradhan                      8260683863  rp538253@gmail.com                  rp538253
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

+----------------------+
| Thursday, 06-06-2024 |    Day-01
+----------------------+
    =   Induction by Adit Jena
        >   21st Century Skills

    =   Introduction to Programming Languages
        >   Features:
            ~   Executed by sequence of line number
            ~   Jump from one line to another specified line
            ~   Loops/Iterates across on or more lines
            ~   Condition checking
            ~   Evaluate equation

    =   Introduction to HTML
        >   Elements
        >   Attributes
            ~   Standard Attributes
            ~   Common Attributes
            ~   Event Attributes

    =   Internet Browsers
        >   Netscape Navigator
        >   Google Chrome


+--------------------+
| Friday, 07-06-2024 |  Day-02
+--------------------+
    =   What is a Computer Programming Language?
        They are a set of instructions to the computer in form of notations.
        This instruction set has to be converted into machine language inorder
        to be executed by the computer.

    =   How is the conversion from programming language to machine language done?
        The conversion is done using a tool that is called the compiler.

    =   Types to Programming Languages
        >   Passive languages
            Is a presentation language. It doesn't follow the rules or features of
            a general computer programming language. World's highest used language
            is a passive language. Example of passive languages are HTML, SGML, etc.

        >   Active languages
            Active languages are more popular. All critical problems are solved in
            the computer using active languages. It resides in the machine in which
            it is executed. Example of active languages are, BASIC, COBOL, PASCAL,
            ForTran, C, C++, Java,

        >   Dynamic languages
            Programs that run on request in the server machine using the server
            resources. They only send the result of the program to the requesting
            machine. Examples of these languages are PhP, JSP, ASP, Ruby, etc.

    =   HTML is created with HTTP
        The principal element of HTML is <HTML>...</HTML>.

    =   Merging cells
        COLSPAN and ROWSPAN
        3 ROWS & 11 COLS
        +-------+---------------------------+------------+-------------------------------------------------+
        |       |                           |            |                      AGE GROUP                  |
        |       |                           |            +-----------+------------+------------+-----------+
        |       |                           |            | >5 & <=10 | >10 & <=15 | >15 & <=20 |    >20    |
        |       |                           |            +-----+-----+------+-----+------+-----+-----+-----+
        |  SLNO |  CANDIDATE NAME           |     DOB    |  M  |  F  |   M  |  F  |   M  |  F  |  M  |  F  |
        +-------+---------------------------+------------+-----+-----+------+-----+------+-----+-----+-----+
            1    MILAN DAS                    25-11-1963                                          1

    =   ASSIGNMENT-1:
        +-------+-------------------------------+-----------------------------------------------------------------------------------------------------------+
        |       |                               |                                           POPULATION                                                      |
        |       |                               |-----------------------------------------------------+-----------------------------------------------------|
        |       |                               |                           URBAN                     |                           RURAL                     |
        |       |                               |--------------------------+--------------------------+--------------------------+--------------------------|
        |       |                               |           MALE           |           FEMALE         |          MALE            |           FEMALE         |
        |       |                               |-----+------+-------+-----+-----+------+-------+-----+-----+------+-------+-----+-----+------+-------+-----|
        |  SLNO | NAME OF THE DISTRICT          | <5  | 6-15 | 16-25 | >25 | <5  | 6-15 | 16-25 | >25 | <5  | 6-15 | 16-25 | >25 | <5  | 6-15 | 16-25 | >25 |
        |-------+-------------------------------+-----+------+-------+-----+-----+------+-------+-----+-----+------+-------+-----+-----+------+-------+-----|
        |       |                               |     |      |       |     |     |      |       |     |     |      |       |     |     |      |       |     |
        |       |                               |     |      |       |     |     |      |       |     |     |      |       |     |     |      |       |     |
        |       |                               |     |      |       |     |     |      |       |     |     |      |       |     |     |      |       |     |
        |       |                               |     |      |       |     |     |      |       |     |     |      |       |     |     |      |       |     |
        |       |                               |     |      |       |     |     |      |       |     |     |      |       |     |     |      |       |     |
        |       |                               |     |      |       |     |     |      |       |     |     |      |       |     |     |      |       |     |
        |       |                               |     |      |       |     |     |      |       |     |     |      |       |     |     |      |       |     |

    =   ASSIGNMENT-2:
        Two or more rows may be merged. Similarly, two or more columns may also be merged.
        +----+--------------+----------+---------------------------------------+---------+
        |    |              |          |                  POPULATION           |         |
        |    |              |          |-------------------+-------------------+         |
        |    |              |          |       URBAN       |      RURAL        |         |
        |    |              |          |---------+---------+---------+---------+         |
        |    |              |          |   GOVT  |   PVT   |   GOVT  |   PVT   |         |
        |    |              |          |----+----+----+----+----+----+----+----+         |
        | SL | DISTRICT     | STATE    |  M |  F |  M |  F |  M |  F |  M |  F |  TOTAL  |
        +----+--------------+----------+----+----+----+----+----+----+----+----+---------+
          1   BALASORE       ODISHA      245  211  245  211  245  211  245  211      1001
          2   CUTTACK        ODISHA      245  211  245  211  245  211  245  211      1001

    =   ASSIGNMENT-3:
        +----------------------------------+
        |                                  |
        +----------------------------------+
        |  CE  |  AC  |  M   |  M+  |  ON  |
        |------+------+------+------+------|
        |  SQR |  LOG |  AVG |  %   |  *   |
        |------+------+------+------+------|
        |   7  |   8  |   9  |  ++  |  -   |
        |------+------+------+------+------|
        |   4  |   5  |   6  |  --  |      |
        |------+------+------+------|  +   |
        |   1  |   2  |   3  |  **  |      |
        |------+-------------+-------------|
        |   .  |      0      |      =      |
        +------+-------------+-------------+


+--------------------+
| Monday, 10-06-2024 |  Day-03
+--------------------+
    =   1)  a           Anchor: Creates link to another location
        2)  img         Image: Displays an image (jpg, png, ...)
        3)  iframe      Window: Display's a window showing another html page
        4)  frame       
        5)  frameset    
        6)  ol          Ordered List: Displays the sequence number (1, a, A & i)
        7)  ul          Unordered List: Displays a bullet (disc, square, circle)
        8)  p           Paragraph
        9)  br          Break row
        10) hr          Horizontal row

    =   ASSIGNMENT-1
        Complete the Project Report for Nilachal Ispat Nigam Ltd

    =   ASSIGNMENT-2
        Complete the webpage of the Government Politial Parties and Leaders

    =   ASSIGNMENT-3
        Create two columns of windows and display the list of countries in one window.
        On clicking on the country name, the corresponding window will display the 
        capital of the country, population, area in km, etc. (show the google map of that
        country).

+---------------------+
| Tuesday, 11-06-2024 |  Day-04
+---------------------+
    =   1)  form
        2)  input
        3)  map
        4)  area

    =   Assignment-1
        Create a form in HTML to display and receive the following fields:
        1)  Roll Number
        2)  Name of the Candidate
        3)  Gender (Male, Female & Other)
        4)  Date of Birth
        5)  Name of the home town
        6)  Aadhaar Card Number
        7)  Highest Qualification
        8)  Owns Two-wheeler / Three-wheeler / Four-wheeler
        9)  Hobby
       10)  Innoculation

    =   Assignment-2
        Create links to the figures in the figures.jpg file. 

    =   Solve the question paper "Test-IIG-HTML-001 (11-06-2024).docx" uploaded in
        "https://github.com/milandas63/Intern-2024-06-06/tree/main/Lesson/Day-04 (11-06-2024)"


+-----------------------+
| Wednesday, 12-06-2024 |  Day-05
+-----------------------+
    =   CSS stands for Cascading Style Sheet

    =   There are 3 types of CSS:
        1)  Inline CSS
            When the CSS code is provided within the STYLE common attribute, it known
            as inline css.
        2)  Internal CSS
        3)  External CSS

    =   What is CSS?
        CSS is a set of property:value; pairs that defines the look of the element.
        Example of inline css:
            <h1 style="background-color:MistyRose;color:red;text-align:center;">This is a line of text</h1>

    =   Internal CSS:
        These types of css are defined in the <style> element within <head> element.

    =   External CSS:
        When the css declaration is provided in a separate file, say style.css and
        the same is linked to the html file using the <link> element:
        Example:
            <link rel="stylesheet" href="filename.css">

    =   What is BootStrap?
        The most popular CSS framework. Predefined CSS classes are provided in a .css
        file. Just link the css file and use the classes in element to apply styling.

    =   How to use the BootStrap CSS framework?
        BootStrap documentation is provided across the web.
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">

        
    =   ASSIGNMENT-1:
        +----------------------------------+
        |                                  |            white
        +----------------------------------+
        |  CE  |  AC  |  M   |  M+  |  ON  |            lightgray
        |------+------+------+------+------|
        |  SQR |  LOG |  AVG |  %   |  *   |            white
        |------+------+------+------+------|
        |   7  |   8  |   9  |  ++  |  -   |            lightgray
        |------+------+------+------+------|
        |   4  |   5  |   6  |  --  |      |            white
        |------+------+------+------|  +   |
        |   1  |   2  |   3  |  **  |      |            lightgray
        |------+-------------+-------------|
        |   .  |      0      |      =      |            white
        +------+-------------+-------------+


+----------------------+
| Thursday, 13-06-2024 |  Day-06
+----------------------+
    =   What is JavaScript?
        >   JavaScript was designed to add interactivity to HTML pages
        >   JavaScript is a scripting language
        >   A scripting language is a lightweight programming language
        >   JavaScript is usually embedded directly into HTML pages
        >   JavaScript is an interpreted language (means that scripts execute without
            preliminary compilation)
        >   Everyone can use JavaScript without purchasing a license

    =   What can a JavaScript Do?
        >   JavaScript gives HTML designers a programming tool - HTML authors are 
            normally not programmers, but JavaScript is a scripting language with
            a very simple syntax! Almost anyone can put small "snippets" of code
            into their HTML pages
        >   JavaScript can put dynamic text into an HTML page - A JavaScript statement 
            like this:
            document.write("<h1>" + name + "</h1>") can write a variable text into 
            an HTML page
        >   JavaScript can react to events - A JavaScript can be set to execute when 
            something happens, like when a page has finished loading or when a user 
            clicks on an HTML element
        >   JavaScript can read and write HTML elements - A JavaScript can read and 
            change the content of an HTML element
        >   JavaScript can be used to validate data - A JavaScript can be used to 
            validate form data before it is submitted to a server. This saves the 
            server from extra processing
        >   JavaScript can be used to detect the visitor's browser - A JavaScript 
            can be used to detect the visitor's browser, and - depending on the 
            browser - load another page specifically designed for that browser
        >   JavaScript can be used to create cookies - A JavaScript can be used to 
            store and retrieve information on the visitor's computer

    =   The Real Name is ECMAScript
        >   JavaScript's official name is "ECMAScript". The standard is developed and 
            maintained by the ECMA organisation.
        >   ECMA-262 is the official JavaScript standard. The standard is based on 
            JavaScript (Netscape) and JScript (Microsoft).
        >   The language was invented by Brendan Eich at Netscape (with Navigator 2.0),
            and has appeared in all Netscape and Microsoft browsers since 1996.


    =   Document document = new Document();
        document.getElementById("from");

    =   Assignment-1
        >   Complete the program datavalidation.html. Add more fields and
            validate the fields on clicking the Save button.

    =   Assignment-2
        >   Write a program to take from number and to number from the user.
            Print all PRIME numbers between the two number.

    =   Assignment-3
        >   Replace all data in the calculator program to BUTTONs and provide event
            handling to the buttons.


+--------------------+
| Monday, 17-06-2024 |  Day-07
+--------------------+
    =   Write a program to display all color names in list box. On clicking on any of
        the color names, the body of page changes to the selected color.

    =   Write a program to display a table with at least 10 rows and 5 columns. At the
        bottom of the table give a button. On clicking on the button, reverse the table
        horizontally and vertically.


+---------------------+
| Tuesday, 18-06-2024 |  Day-08
+---------------------+
    =   JavaScript form validation (form-data-check.html)
    =   Count the number of vowels in a given string (count-vowels.html)
    =   Flip/Revert the alpha case in a given string (flip-case.html)

+-----------------------+
| Wednesday, 19-06-2024 |  Day-09
+-----------------------+
    =   Java Programming Language
    =   Pattern programming
        a)  Pyramid
        b)  Diamond
        c)  Palindrome
        d)  Multiplication Tables

+----------------------+
| Thursday, 20-06-2024 |  Day-10
+----------------------+
    =   Computer programming paradigms
    =   Java is an Object Oriented Programming Language
    =   In an OOPs language, programs are written within a class

    =   LIST OF RESERVE WORDS/KEY WORDS IN JAVA (53 words)
        abstract    continue    for         new         switch
        assert***   default     goto*       package     synchronized
        boolean     do          if          private     this
        break       double      implements  protected   throw
        byte        else        import      public      throws
        case        enum****    instanceof  return      transient
        catch       extends     int         short       try
        char        final       interface   static      void
        class       finally     long        strictfp**  volatile
        const*      float       native      super       while
        null        true        false

        *       not used
        **      added in 1.2
        ***     added in 1.4
        ****    added in 5.0

        class Example {
            // Field/Variable members
            String name;
            int age;
            char gender;

            // Constructor members (name of the constructor must resemble with the classname)
            Example() {
            }

            Example(String n, int a, char g) {
                name = n;
                age = a;
                gender = g;
            }

            //  Method/Function members
            
            //  Destructor (variable/field locations are reclaimed)

        }

        int i = 10;
        {
            int j = 25;
        }
        System.out.println(i+" "+j);

    =   Grammer for creating a class. Certain nomenclatures are used.
        []  -   Optional, may not be used
        <>  -   User identifier
        {}  -   Any one of the following
        |   -   Option separator

        [access-modifier]
        [modifier]
        class <className>
        [extends <parentClass>]
        [implements <interfaces,.....>]
        {
            //  fields
            //  constructors
            //  methods
        }

    =   What are access-modifier?
        They provide access to the class, field, constructor and method
        There are 4 accesses. They are private, protected, public, <default>

        private:
            The entity that is applied with private access, is hidden and not
            accessible
        protected:
            Normally a program is written within a package. When classes from other
            packages access a class, they have restrictions.

            If the calling and caller are in the same package, inheritance and instanciation
            are both allowed.

            The calling class can use the other class by instanciation and inheritance
            is restricted across two different packages
        public:
            Both the ways are allowed.

        <default>:
            If the calling and caller are in the same package, inheritance and instanciation
            are both allowed.

            The calling class can use the other class by inheritance and instanciation
            is restricted across two different packages


        How classes are arranged?
            package-1
            +-  class-1
            +-  class-2
            +-  class-3
            package-2
            +-  class-101
            +-  class-201
            +-  class-301
            package-3
            +-  class-1001
            +-  class-2002
            +-  class-3003

        How classes are used?
            There are 2 ways how one class can use another class:
            1.  By instanciating    Y y = new Y();
            2.  By inheritance      class X extends Y {}

    =   How to declare an array?

        An array is declared by several ways:
        1.  String[] names = {"Bob","John","Max","Stipen","Rob","Milan"};
            names becomes an array object

        2.  int[] ages = new int[10];
            String[] books = new String[3];

        3.  System.out.println(names.length);

        4.  String name = "James Gosling";
            System.out.println(name.length());

    =   ASSIGNMENT
        12: Complete the series of 10 numbers in the following incomplete series?
                a)  1,  2,  3,   4,    5, ......
                b)  5,  7,  9,  11,   13, ......
                c)  2,  5,  9,  14,   20, ......
                d)  1,  3,  5,  11,   21, ......      (n, n*2-1, n*2+1, n*2-1, n*2+1, ...
                e)  1,  2,  6,  42, 1806, ......      (n*nth+nth), when n starts from 1

+--------------------+
| Friday, 21-06-2024 |  Day-11
+--------------------+
    =   Java is a highly typed language means, every variable/fields declared must 
        have the data-type defined before that.
            int age = 30;
        
    =   How many types of data-types are there in Java?
        There are 2 categories of data-types:
        a)  Primitive data-type
                SL. PRIMITIVE-TYPE          WRAPPER     RANGE-OF-VALUES
            i)  Integer data-type
                1)  byte                    Byte        -127 to +128
                2)  short                   Short       -32768 to 32767                            
                3)  int         default     Integer     -2147483648 to 2147483647                  
                4)  long                    Long        -9223372036854775808 to 9223372036854775807
           ii)  Floating point data-type
                5)  float                   Float
                6)  double      default     Double
          iii)  Logical data-type
                7)  boolean                 Boolean
           iv)  Character data-type         
                8)  char                    Character

        b)  Object data-type

    =   INSTATIATION
        primary (object always resides in primary)

              a   b   c    q    t   x       y       |
               \  |  /      \   |    \     /        |
        --------\-|-/--------\--|-----\---/---------|-- new
                 \|/          \ |      \ /          |
               String          \|       B           |
                                A                Integer

        secondary (a class always resides in secondary)



    =   System.out.print(3.3);
        float num = 3.33;       // wrong
        float num = 4.22F;
        long l = 339899488483437;

    =   Whenever an object of a class is created, call the Constructor with the help
        of new operator. It return an object.
        Example:
                Long lo = new Long(2230949L);
                int i = new Integer(34);
                char c = new Character('C');
    
    =   There are 3 types of Java programs:
        1)  Application: A Java program that starts from the main() method
        2)  Applet: A GUI program that is embedded with a web page
        3)  Servlet: A Java program that runs on the server on receiving request from
            from the client

    =   ASSIGNMENT:
        37: Repetitively sum all digits of a number to determine the unisum (single digit)?
            Example:     728394 = 7+2+8+3+9+4 = 33 = 3+3 = 6
                     9778911223 = 9+7+7+8+9+1+1+2+2+3 = 49 = 4+9 = 13 = 1+3 = 4
                     7978168568 = 7+9+7+8+1+6+8+5+6+8 = 65 = 6+5 = 11 = 1+1 = 2

        38: Write a function that takes a list of strings and prints them, one per line, in
            a rectangular frame.
            For example the list ["Hello", "World", "in", "a", "frame"] gets printed as:
                *********
                * Hello *
                * World *
                * in    *
                * a     *
                * frame *
                *********

+--------------------+
| Monday, 24-06-2024 |  Day-12
+--------------------+
    =   [modifiers]
        There are as many as 8 modifiers:
        1)  abstract
        2)  final
        3)  static
        4)  native
        5)  strictfp
        6)  transient
        7)  volatile
        8)  synchronized

    =   APPLIED RULES
       --------------------------------------------------------------------------
                                                    OUTER   INNER   OUTER   INNER
        SL  MODIFIER        FIELD   METHOD  CONSTR  CLASS   CLASS  INTERF  INTERF
       --------------------------------------------------------------------------
        1.  public          yes     yes     yes     yes     yes     yes     yes
        2.  protected       yes     yes     yes     no      yes     no      yes
        3.  private         yes     yes     yes     no      yes     no      yes
        4.  <undefined>     yes     yes     yes     yes     no      yes     no
       --------------------------------------------------------------------------
        5.  abstract        no      yes     no      yes     yes     yes     yes
        6.  final           yes     yes     no      yes     yes     no      no
        7.  static          yes     yes     no      no      yes     no      yes
        8.  native          no      yes     no      no      no      no      no
        9.  synchronized    no      yes     no      no      no      no      no
       10.  transient       yes     no      no      no      no      no      no
       11.  volatile        yes     no      no      no      no      no      no
       12.  strictfp        no      yes     no      yes     yes     yes     yes
       --------------------------------------------------------------------------

    =   Entities:
        1)  class
        2)  field/variable
        3)  constructor
        4)  method/function

        header {
        }

        public abstract class Calculation {
            public abstract void getNumber();
            public String getName() {
                return "Name...";
            }
        }

        header;

    =   The final modifier:
        1)  When a class is final, it is restricted to be inherited
        2)  When a field is final, the content can't be changed
        3)  If a method is final, the same is restricted to be overrided in the subclass

    =   The static modifier:
        1)  When a field is declared static, the same field share common memory location
            for all its instances
        2)  If a field or a method is static, the same method is called by class name
            reference

    =   Tools provided in the Java Development Toolkit
        1.  appletviewer.exe
        2.  extcheck.exe
        3.  idlj.exe
        4.  jabswitch.exe
        5.  jar.exe
        6.  jarsigner.exe
            java.exe
            javac.exe           It compiles a .java file and generates the .class file
            javadoc.exe
            javafxpackager.exe
            javah.exe
            javap.exe           It decompiles a .class file to a .java file - reverse engineering
            javapackager.exe
            java-rmi.exe
            javaw.exe
            javaws.exe
            jcmd.exe
            jconsole.exe
            jdb.exe
            jdeps.exe
            jhat.exe
            jinfo.exe
            jjs.exe
            jmap.exe
            jps.exe
            jrunscript.exe
            jsadebugd.exe
            jstack.exe
            jstat.exe
            jstatd.exe
            jvisualvm.exe
            keytool.exe
            kinit.exe
            klist.exe
            ktab.exe
            native2ascii.exe
            orbd.exe
            pack200.exe
            policytool.exe
            rmic.exe
            rmid.exe
            rmiregistry.exe
            schemagen.exe
            serialver.exe
            servertool.exe
            tnameserv.exe
            unpack200.exe
            wsgen.exe
            wsimport.exe
            xjc.exe

    =   Reflection or Reverse-Engineering
        >   One class in the name Class is provided in java.lang package that helps to
            re-engineer a bytecode file back to java source file.
        >   Other classes are in java.lang.ref package.


    FIELDS: 
    1: private final char[] java.lang.String.value
    2: private int java.lang.String.hash
    3: private static final long java.lang.String.serialVersionUID
    4: private static final java.io.ObjectStreamField[] java.lang.String.serialPersistentFields
    5: public static final java.util.Comparator java.lang.String.CASE_INSENSITIVE_ORDER

    1: private final char[] value
    2: private int hash
    3: private static final long serialVersionUID
    4: private static final ObjectStreamField[] serialPersistentFields
    5: public static final Comparator CASE_INSENSITIVE_ORDER

    =   Write the suppress() method in the Reflection.java and run the program
